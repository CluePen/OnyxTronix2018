// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc.team2231.robot.subsystems;

import org.usfirst.frc.team2231.robot.Potentiometer;
import org.usfirst.frc.team2231.robot.Robot;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.PIDController;
import org.usfirst.frc.team2231.robot.commands.KeepElevatorInPlace;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class Elevator extends Subsystem {
	private final SpeedControllerGroup elevatorWheels = Robot.m_robotMap.elevatorWheels;
    public final WPI_TalonSRX firstMotor = Robot.m_robotMap.elevatorFirstMotor;
    private final WPI_VictorSPX secondMotor = Robot.m_robotMap.elevatorSecondMotor;
    private final WPI_VictorSPX thirdMotor = Robot.m_robotMap.elevatorThirdMotor;
	public final Potentiometer m_potentiometer = Robot.m_robotMap.potentiometer;
	public final PIDController pidController = Robot.m_robotMap.elevatorPIDController;

    private final WPI_VictorSPX fourthMotor = Robot.m_robotMap.elevatorFourthMotor;
	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	@Override
	public void initDefaultCommand() {
		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
    	setDefaultCommand(new KeepElevatorInPlace());
	}

	public void setSpeed(double speed) {
		elevatorWheels.set(speed);
	}

	public void stop() {
		elevatorWheels.set(0);
	}

	public void setHeight(double height) {
		pidController.setSetpoint(height);
	}

	public double getHeight() {
		return m_potentiometer.getHeight();
	}
}